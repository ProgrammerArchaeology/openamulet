.\"                                                   -*- nroff -*-
.\" This documentation is based on the Amulet project of Carnegie
.\" Mellon University, and has been placed in the public domain.  If
.\" you are using any part of OpenAmulet, please contact
.\" amulet@cs.cmu.edu to be put on the mailing list or have a look at:
.\" http://www.scrap.de/html/amulet.htm.
.TH AM_INITIALIZE 3 1999-08-29 "Amulet" "Amulet Programmer's Manual"
.\"
.SH NAME
.ad l
.nh
Am_Main_Event_Loop, Am_Exit_Main_Event_Loop, Am_Initialize, Am_Cleanup
\- Amulet initialization and cleanup
.SH SYNOPSIS
.B #include <amulet.h>
.HP
.B extern void Am_Initialize ();
.HP
.B extern void Am_Main_Event_Loop ();
.HP
.B extern void Am_Exit_Main_Event_Loop ();
.HP
.B extern void Am_Cleanup ();
.SH "DESCRIPTION"
.ad b
.hy
OpenAmulet requires a call to 
\fBAm_Initialize\fP
before referencing any Opal objects or classes. 
This function creates the Opal prototypes and sets up 
bookkeeping information in OpenAmulet objects and classes. 
Similarly, a call to \fBAm_Cleanup\fP
at the end of your program 
allows OpenAmulet to destroy the prototypes and classes, 
explicitly releasing memory and graphical resources that might otherwise 
remain occupied after the program exits.
.P
In order for interactors to perceive input from the mouse and
keyboard, the main-event-loop must be running.  This loop constantly
checks to see if there is an event, and processes it if there is one.
The automatic redrawing of graphics also relies on the
main-event-loop.  Exposure events, which occur when one window is
uncovered or exposed, cause OpenAmulet to refresh the window by
redrawing the objects in the exposed area.
.P
A call to \fBAm_Main_Event_Loop\fP should be the second-to-last
instruction in your main program, just before \fBAm_Cleanup\fP.  Your
program will continue to run until you tell it otherwise.  All
OpenAmulet programs running \fBAm_Main_Event_Loop\fP can be aborted by
pressing the escape sequence, which by default is \fBMETA-SHIFT-F1\fP.
Most programs will have a Quit option, in the form of a button or menu
item, that calls \fBAm_Exit_Main_Event_Loop\fP, which will cause the
main event loop to terminate.
.\".SH RETURN VALUES
.\".SH ERRORS
.SH EXAMPLES
This is a simple Amulet program:
.sp
.nf
   int main (void)
   {
     Am_Initialize ();
   
     Am_Object my_win = Am_Window.Create ("my_win")
       .Set (Am_LEFT, 20)
       .Set (Am_TOP, 50);
     
     Am_Screen.Add_Part (my_win);
   
   // code to add widgets to the window would go here
     
     Am_Main_Event_Loop ();
     Am_Cleanup ();
   
     return 0;
   }
.fi
.\".SH AUTHOR
.SH "SEE ALSO"
"OpenAmulet Reference Manual"

