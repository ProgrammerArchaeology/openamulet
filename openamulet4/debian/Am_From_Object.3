.\"                                                   -*- nroff -*-
.\" This documentation is hereby placed in the public domain.
.TH AM_FROM_OBJECT 3 1999-08-29 "Amulet" "Amulet Programmer's Manual"
.\"
.ad l
.nh
.SH NAME
Am_From_Object, Am_Bottom_Of_Sibling, Am_From_Sibling, Am_Rest_Of_Height_Above, Am_Right_Of_Sibling, Am_From_Owner, Am_Same_As, Am_From_Part \- constraints useful for positioning Amulet widgets
.SH SYNOPSIS
.B #include <amulet.h>
.HP
.B extern Am_Formula Am_From_Object (Am_Object \fIobject\fP, Am_Slot_Key \fIkey\fP);
.HP
.B extern Am_Formula Am_From_Object (Am_Object \fIobject\fP, Am_Slot_Key \fIkey\fP, int \fIoffset\fP, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_From_Owner (Am_Slot_Key \fIkey\fP);
.HP
.B extern Am_Formula Am_From_Owner (Am_Slot_Key \fIkey\fP, int \fIoffset\fP, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_From_Part (Am_Slot_Key \fIpart\fP, Am_Slot_Key \fIkey\fP);
.HP
.B extern Am_Formula Am_From_Part (Am_Slot_Key \fIpart\fP, Am_Slot_Key \fIkey\fP, int \fIoffset\fP, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_Same_As (Am_Slot_Key \fIkey\fP);
.HP
.B extern Am_Formula Am_Same_As (Am_Slot_Key \fIkey\fP, int \fIoffset\fP, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_From_Sibling (Am_Slot_Key \fIsibling\fP, Am_Slot_Key \fIkey\fP);
.HP
.B extern Am_Formula Am_From_Sibling (Am_Slot_Key \fIsibling\fP, Am_Slot_Key \fIkey\fP, int \fIoffset\fP, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_Bottom_Of_Sibling (Am_Slot_Key \fIsibling\fP, int \fIoffset\fP = 0, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_Right_Of_Sibling (Am_Slot_Key \fIsibling\fP, int \fIoffset\fP = 0, float \fImultiplier\fP = 1.0);
.HP
.B extern Am_Formula Am_Rest_Of_Height_Above (Am_Slot_Key \fIsibling\fP, int \fIoffset\fP = 0);
.SH "DESCRIPTION"
.ad b
.hy
These are predefined \fBAm_Formula\fPs that can be set in slots of an
\fBAm_Object\fP.  Each gets its value from some other slot.  If
\fIoffset\fP or \fImultiplier\fP are provided, then the value must be
numeric.  If both are provided, then \fImultiplier\fP is applied
first.

\fBAm_From_Object\fP gets its value from the slot with key \fIkey\fP
of \fIobject\fP.

\fBAm_From_Owner\fP gets its value from slot with key \fIkey\fP of the
owner of this object.  If there is no offset or multiplier, then it is
equivalent to
.sp
.nf
    return self.Get_Owner().Get(\fIkey\fP);
.fi

\fBAm_From_Part\fP gets its value from the specified slot (\fIkey\fP)
in the specified part (\fIpart\fP) of this object.  If there is no
offset or multiplier, then it is equivalent to
.sp
.nf
    return self.Get_Object(\fIpart\fP).Get(\fIkey\fP);
.fi

\fBAm_From_Sibling\fP gets its value from the specified slot (\fIkey\fP)
in the specified sibling (\fIsibling\fP) of this object.  If there is no
offset or multiplier, then it is equivalent to
.sp
.nf
    return self.Get_Sibling(\fIsibling\fP).Get(\fIkey\fP);
.fi

\fBAm_Same_As\fP gets its value from the specified slot (\fIkey\fP) in
the same object.
.P
\fBAm_Bottom_Of_Sibling\fP gets its value from the bottom of the
specified sibling.
\fBAm_Right_Of_Sibling\fP gets its value from the right side of the
specified sibling.
\fBAm_Rest_Of_Height_Above\fP returns the difference between top to
offset above the sibling.
.SH EXAMPLES

The following code adds a text input widget whose top is 93 pixels up
from the bottom of the owner, and whose width is 44 pixels less
than the width of the owner:
.sp
.nf
  Am_Object file_dialog = Am_Window.Create("file_dialog")
    .Set(Am_FILL_STYLE, Am_Motif_Gray)
    .Set(Am_WIDTH, 456)
    .Set(Am_HEIGHT, 333)
    .Add_Part(txtSelection,
	      Am_Text_Input_Widget.Create("txtSelection")
	      .Set(Am_LEFT, 22)
	      .Set(Am_TOP, Am_From_Owner(Am_HEIGHT, -93))
	      .Set(Am_WIDTH, Am_From_Owner(Am_WIDTH, -44))
	      .Set(Am_HEIGHT, 26)
	      .Get_Object(Am_COMMAND)
	      .Set(Am_LABEL, "Selection")
	      .Get_Owner()
	      .Set(Am_FILL_STYLE, Am_Amulet_Purple)
	      )
.fi
.\".SH ERRORS
.\".SH AUTHOR
.SH "SEE ALSO"
"OpenAmulet Reference Manual"

